import{_ as s,o as n,c as a,d as l}from"./app.91d29e6e.js";var p="/post/assets/image-20231213002423074.951d5a61.png";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"articles/\u6742/\u5927\u6587\u4EF6\u4E0A\u4F20.md","lastUpdated":1704197026000}'),o={name:"articles/\u6742/\u5927\u6587\u4EF6\u4E0A\u4F20.md"},e=l(`<p><a href="https://juejin.cn/post/6844904046436843527#heading-19" target="_blank" rel="noopener noreferrer">https://juejin.cn/post/6844904046436843527#heading-19</a></p><ul><li><p>\u83B7\u53D6\u6570\u7EC4\u7684\u6700\u540E\u4E00\u4E2A\u5143\u7D20\uFF1A at(-1)</p></li><li><p>\u6570\u7EC4\u4E0E\u5BF9\u8C61\u7684\u76F8\u4E92\u8F6C\u6362</p><div class="language-js"><span class="copy"></span><pre><code><span class="line"><span style="color:#FFCB6B;">\u5BF9\u8C61\u5230\u6570\u7EC4</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">entries</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#FFCB6B;">\u6570\u7EC4\u5230\u5BF9\u8C61</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">fromEntries</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"></span></code></pre></div></li><li><p>\u672C\u5730\u6587\u4EF6\u9884\u89C8</p><p>createObjectUrl</p></li><li><p>\u6587\u4EF6\u79D2\u4F20</p><p>\u670D\u52A1\u5668\u5DF2\u7ECF\u5B58\u6709\u4E00\u4EFD\u4E86\uFF0C\u4E0D\u9700\u8981\u518D\u6B21\u4E0A\u4F20\u3002\u8FD9\u4E2A\u6587\u4EF6\u7684\u6587\u4EF6\u540D\u7531\u6587\u4EF6\u5185\u5BB9hash\u800C\u6210\u3002</p><p>\u9700\u8981\u670D\u52A1\u5668\u63D0\u4F9B\u4E00\u4E2A\u63A5\u53E3\uFF0C\u8FD4\u56DE\u5DF2\u7ECF\u4E0A\u4F20\u7684\u5206\u7247\u548C\u5927\u5C0F\u3002</p></li><li><p>\u5207\u7247\u4E0A\u4F20</p><p>1.\u83B7\u53D6arrayBuffer : blob.arrayBuffer() \u6216\u8005 fileReader.readAsArrayBuffer()</p><p>\u5229\u7528\u6D4F\u89C8\u5668\u63D0\u4F9B\u7684web cryptography api, \u5B83\u7528\u4E8E\u8BA1\u7B97\u4F20\u5165\u6570\u636E\u7684sha-256 \u7B97\u6CD5\u3002</p><p>2.\u8BA1\u7B97\u54C8\u5E0C\uFF1Aawait crypto.subtle.digest(&#39;SHA-256&#39;,arrayBuffer)</p><p>\u8BA1\u7B97\u6587\u4EF6\u5185\u5BB9\u7684hash\u4F1A\u5F88\u6162\uFF0C\u53EF\u4EE5\u7528worker\uFF0C\u9632\u6B62\u8017\u65F6\u64CD\u4F5C\u963B\u585EUI\u7EBF\u7A0B</p><p>3.\u5F97\u5230\u6587\u4EF6\u540D\u4E4B\u540E\uFF0C\u5C31\u53EF\u4EE5\u5904\u7406\u5207\u7247\u4E86</p></li><li><p>\u5207\u7247\u6570\u91CF\u7684\u52A8\u6001\u8C03\u6574</p></li><li><p>content-type\u7684application/octet-stream \u548C form-data\u533A\u522B</p><p>\u7528\u5B57\u8282\u6D41\u7684\u8BDD\u53EA\u80FD\u4E0A\u4F20\u4E8C\u8FDB\u5236\u6587\u4EF6</p><p>\u5982\u679C\u7528formData\u7684\u8BDD\u53EF\u4EE5\u540C\u65F6\u4E0A\u4F20\u6587\u4EF6\u548C\u666E\u901A\u5B57\u6BB5</p></li><li><p>\u5E76\u884C\u5199\u5165</p><p>\u5229\u7528\u53EF\u5199\u6D41\u53EF\u4EE5\u6307\u5B9A\u5199\u5165\u4F4D\u7F6E</p></li></ul><p><img src="`+p+`" alt="image-20231213002423074"></p><ul><li><p>\u6682\u505C\u4E0A\u4F20</p><p>\u63A7\u5236\u4E0A\u4F20\u7684\u72B6\u6001\uFF1A\u672A\u4E0A\u4F20\uFF0C\u4E0A\u4F20\u4E2D\uFF0C\u5DF2\u6682\u505C</p><p>\u5B58\u653E\u6240\u6709\u4E0A\u4F20\u8BF7\u6C42\u7684cancel token</p><p>\u8C03\u7528cancel\u65B9\u6CD5\uFF0Caxios\u4F1A\u629B\u51FA\u9519\u8BEF\uFF0C\u5728try catch\u91CC\u9762\u7528isCancel\u65B9\u6CD5\u5224\u65AD\u662F\u5426\u4E3A\u7528\u6237\u53D6\u6D88\u6682\u505C\u7684\u800C\u5BFC\u81F4\u7684\u5F02\u5E38</p></li><li><p>\u6062\u590D\u4E0A\u4F20\uFF08\u5373\u65AD\u70B9\u7EED\u4F20\uFF09</p><p>\u670D\u52A1\u7AEF\u9700\u8981\u63D0\u4F9B\u4E00\u4E2A\u63A5\u53E3\uFF0C\u83B7\u53D6\u6BCF\u4E2A\u5206\u7247\u4E0A\u4F20\u4E86\u591A\u5C11\uFF0C\u4EE5\u4FBF\u5BA2\u6237\u7AEF\u4E0A\u4F20\u5206\u7247\u5269\u4E0B\u7684\u90E8\u5206</p><p>const remainingChunk = file.slice(uploadedSize)</p><p>\u5982\u679CremainingChunk.size==0 \u5219\u8868\u793A\u5DF2\u7ECF\u4E0A\u4F20\u5B8C\u6210\uFF0C\u76F4\u63A5resolve\u5373\u53EF</p></li></ul><p>\u200B \u65AD\u70B9\u7EED\u4F20\u8FD8\u9700\u8981\u7ED9\u63A5\u53E3\u4F20 \u5206\u7247\u7684\u8D77\u59CB\u7D22\u5F15\uFF0C\u7528\u4E8E\u670D\u52A1\u7AEF\u7ED9\u5206\u7247\u7684\u5199\u5165\u4F4D\u7F6E</p><ul><li><p>worker</p><p>\u4E0E\u4E3B\u7EBF\u7A0B\u9694\u79BB\uFF0C\u6709\u81EA\u5DF1\u7684\u5168\u5C40\u4E0A\u4E0B\u6587\uFF0C\u4E0D\u80FD\u8BBF\u95EEdom, window</p></li><li><p>\u63A7\u5236\u5E76\u53D1\u4E0A\u4F20\u7684\u6570\u91CF</p><div class="language-js"><span class="copy"></span><pre><code><span class="line"><span style="color:#89DDFF;">&lt;!</span><span style="color:#A6ACCD;">DOCTYPE html</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">html</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">lang</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">en</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">head</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">meta</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">charset</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">UTF-8</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">meta</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">viewport</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">content</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">width=device-width, initial-scale=1.0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">title</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">File Upload Demo</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">title</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">head</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">input</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">file</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">fileInput</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">onclick</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">startUpload()</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">Start Upload</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">// Mock function to simulate uploading a file chunk</span></span>
<span class="line"><span style="color:#A6ACCD;">function uploadChunk(chunk) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  return </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#A6ACCD;">(resolve </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// Simulate asynchronous upload</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">setTimeout</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">Uploaded chunk: </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">chunk</span><span style="color:#89DDFF;">}\`</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">resolve</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">random</span><span style="color:#F07178;">() </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1000</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// Simulating network latency</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">// Function to handle file upload</span></span>
<span class="line"><span style="color:#A6ACCD;">async function startUpload() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  const fileInput </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getElementById</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">fileInput</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  const file </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> fileInput</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">files[</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  const chunkSize </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1024</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1024</span><span style="color:#A6ACCD;">; </span><span style="color:#676E95;font-style:italic;">// 1 MB chunk size</span></span>
<span class="line"><span style="color:#A6ACCD;">  const totalChunks </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ceil</span><span style="color:#A6ACCD;">(file</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">size </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> chunkSize);</span></span>
<span class="line"><span style="color:#A6ACCD;">  const concurrencyLimit </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">; </span><span style="color:#676E95;font-style:italic;">// Maximum concurrent uploads</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  let uploadedChunks </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">uploadNextChunk</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">uploadedChunks</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&gt;=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">totalChunks</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Upload completed</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">start</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">currentChunk</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">chunkSize</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">end</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">min</span><span style="color:#F07178;">((</span><span style="color:#A6ACCD;">currentChunk</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">chunkSize</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">file</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">size</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">chunk</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">file</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">slice</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">start</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">end</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">Uploading chunk </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">currentChunk </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">totalChunks</span><span style="color:#89DDFF;">}\`</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// Simulate upload and wait for it to complete</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">uploadChunk</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">chunk</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">uploadedChunks</span><span style="color:#89DDFF;">++;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// Upload the next chunk</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">uploadNextChunk</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// Start initial uploads (up to the concurrency limit)</span></span>
<span class="line"><span style="color:#A6ACCD;">  const initialUploads </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">min</span><span style="color:#A6ACCD;">(totalChunks</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> concurrencyLimit);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">for</span><span style="color:#A6ACCD;"> (let i </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">; i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> initialUploads; i</span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">uploadNextChunk</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">html</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div></li></ul>`,6),t=[e];function c(r,F,y,D,C,i){return n(),a("div",null,t)}var d=s(o,[["render",c]]);export{u as __pageData,d as default};
